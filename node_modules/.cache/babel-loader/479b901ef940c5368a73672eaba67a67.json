{"ast":null,"code":"import _defineProperty from \"/Users/rishi.arya/Documents/youtube/Nature Pics/react-calendar-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/rishi.arya/Documents/youtube/Nature Pics/react-calendar-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rishi.arya/Documents/youtube/Nature Pics/react-calendar-master/src/components/mainIndex.js\";\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { range } from \"moment-range\";\nimport \"../components/calendar\";\nexport default function MainIndex() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showCalendarTable = _useState2[0],\n      setShowCalenderTable = _useState2[1];\n\n  var _useState3 = useState(moment()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dateObject = _useState4[0],\n      setDateObject = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showMonthTable = _useState6[0],\n      setShowMonthTable = _useState6[1];\n\n  var _useState7 = useState(moment.months()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      allmonths = _useState8[0],\n      setAllmonths = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showYearNav = _useState10[0],\n      setShowYearNav = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedDay = _useState12[0],\n      setSelectedDay = _useState12[1];\n\n  var weekdayshort = moment.weekdaysShort();\n\n  var daysInMonth = function daysInMonth() {\n    return dateObject.daysInMonth();\n  };\n\n  var year = function year() {\n    return dateObject.format(\"Y\");\n  };\n\n  var currentDay = function currentDay() {\n    return dateObject.format(\"D\");\n  };\n\n  var firstDayOfMonth = function firstDayOfMonth() {\n    var dateObject = dateObject;\n    var firstDay = moment(dateObject).startOf(\"month\").format(\"d\"); // Day of week 0...1..5...6\n\n    return firstDay;\n  };\n\n  var month = function month() {\n    return dateObject.format(\"MMMM\");\n  };\n\n  var showMonth = function showMonth(e, month) {\n    _this.setState({\n      showMonthTable: !showMonthTable,\n      showCalendarTable: !showCalendarTable\n    });\n  };\n\n  var setMonth = function setMonth(month) {\n    var monthNo = allmonths.indexOf(month);\n    var dateObject = Object.assign({}, dateObject);\n    dateObject = moment(dateObject).set(\"month\", monthNo);\n\n    _this.setState({\n      dateObject: dateObject,\n      showMonthTable: !showMonthTable,\n      showCalendarTable: !showCalendarTable\n    });\n  };\n\n  var MonthList = function MonthList(props) {\n    var months = [];\n    props.data.map(function (data) {\n      months.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: data,\n        className: \"calendar-month\",\n        onClick: function onClick(e) {\n          setMonth(data);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, data)));\n    });\n    var rows = [];\n    var cells = [];\n    months.forEach(function (row, i) {\n      if (i % 3 !== 0 || i == 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n    });\n    rows.push(cells);\n    var monthlist = rows.map(function (d, i) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }\n      }, d);\n    });\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"calendar-month\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      colSpan: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Select a Month\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, monthlist));\n  };\n\n  var showYearEditor = function showYearEditor() {\n    _this.setState({\n      showYearNav: true,\n      showCalendarTable: !showCalendarTable\n    });\n  };\n\n  var onPrev = function onPrev() {\n    var curr = \"\";\n\n    if (showMonthTable == true) {\n      curr = \"year\";\n    } else {\n      curr = \"month\";\n    }\n\n    _this.setState({\n      dateObject: dateObject.subtract(1, curr)\n    });\n  };\n\n  var onNext = function onNext() {\n    var curr = \"\";\n\n    if (showMonthTable == true) {\n      curr = \"year\";\n    } else {\n      curr = \"month\";\n    }\n\n    _this.setState({\n      dateObject: dateObject.add(1, curr)\n    });\n  };\n\n  var setYear = function setYear(year) {\n    // alert(year)\n    var dateObject = Object.assign({}, dateObject);\n    dateObject = moment(dateObject).set(\"year\", year);\n\n    _this.setState(_defineProperty({\n      dateObject: dateObject,\n      showMonthTable: !showMonthTable,\n      showYearNav: !showYearNav\n    }, \"showMonthTable\", !showMonthTable));\n  };\n\n  var onYearChange = function onYearChange(e) {\n    _this.setYear(e.target.value);\n  };\n\n  var getDates = function getDates(startDate, stopDate) {\n    var dateArray = [];\n    var currentDate = moment(startDate);\n    var stopDate = moment(stopDate);\n\n    while (currentDate <= stopDate) {\n      dateArray.push(moment(currentDate).format(\"YYYY\"));\n      currentDate = moment(currentDate).add(1, \"year\");\n    }\n\n    return dateArray;\n  };\n\n  var YearTable = function YearTable(props) {\n    var months = [];\n    var nextten = moment().set(\"year\", props).add(\"year\", 12).format(\"Y\");\n    var tenyear = getDates(props, nextten);\n    tenyear.map(function (data) {\n      months.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: data,\n        className: \"calendar-month\",\n        onClick: function onClick(e) {\n          _this.setYear(data);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }, data)));\n    });\n    var rows = [];\n    var cells = [];\n    months.forEach(function (row, i) {\n      if (i % 3 !== 0 || i == 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n    });\n    rows.push(cells);\n    var yearlist = rows.map(function (d, i) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 14\n        }\n      }, d);\n    });\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"calendar-month\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      colSpan: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, \"Select a Yeah\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, yearlist));\n  };\n\n  var onDayClick = function onDayClick(e, d) {\n    _this.setState({\n      selectedDay: d\n    }, function () {\n      console.log(\"SELECTED DAY: \", selectedDay);\n    });\n  };\n\n  var weekdayshortname = this.weekdayshort.map(function (day) {\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: day,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 12\n      }\n    }, day);\n  });\n  var blanks = [];\n\n  for (var i = 0; i < this.firstDayOfMonth(); i++) {\n    blanks.push( /*#__PURE__*/React.createElement(\"td\", {\n      className: \"calendar-day empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, \"\"));\n  }\n\n  var daysMonth = [];\n\n  var _loop = function _loop(d) {\n    var currentDay = d == _this.currentDay() ? \"today\" : \"\"; // let selectedClass = (d == selectedDay ? \" selected-day \" : \"\")\n\n    daysMonth.push( /*#__PURE__*/React.createElement(\"td\", {\n      key: d,\n      className: \"calendar-day \".concat(currentDay),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: function onClick(e) {\n        _this.onDayClick(e, d);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, d)));\n  };\n\n  for (var d = 1; d <= this.daysMonth(); d++) {\n    _loop(d);\n  }\n\n  var totalSlots = [].concat(blanks, daysMonth);\n  var rows = [];\n  var cells = [];\n  totalSlots.forEach(function (row, i) {\n    if (i % 7 !== 0) {\n      cells.push(row);\n    } else {\n      rows.push(cells);\n      cells = [];\n      cells.push(row);\n    }\n\n    if (i === totalSlots.length - 1) {\n      // let insertRow = cells.slice();\n      rows.push(cells);\n    }\n  });\n  var daysinmonth = rows.map(function (d, i) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 12\n      }\n    }, d);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/Users/rishi.arya/Documents/youtube/Nature Pics/react-calendar-master/src/components/mainIndex.js"],"names":["React","useState","moment","range","MainIndex","showCalendarTable","setShowCalenderTable","dateObject","setDateObject","showMonthTable","setShowMonthTable","months","allmonths","setAllmonths","showYearNav","setShowYearNav","selectedDay","setSelectedDay","weekdayshort","weekdaysShort","daysInMonth","year","format","currentDay","firstDayOfMonth","firstDay","startOf","month","showMonth","e","setState","setMonth","monthNo","indexOf","Object","assign","set","MonthList","props","data","map","push","rows","cells","forEach","row","i","monthlist","d","showYearEditor","onPrev","curr","subtract","onNext","add","setYear","onYearChange","target","value","getDates","startDate","stopDate","dateArray","currentDate","YearTable","nextten","tenyear","yearlist","onDayClick","console","log","weekdayshortname","day","blanks","daysMonth","totalSlots","length","daysinmonth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAO,wBAAP;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA,kBACgBH,QAAQ,CAAC,IAAD,CADxB;AAAA;AAAA,MAC3BI,iBAD2B;AAAA,MACRC,oBADQ;;AAAA,mBAEEL,QAAQ,CAACC,MAAM,EAAP,CAFV;AAAA;AAAA,MAE3BK,UAF2B;AAAA,MAEfC,aAFe;;AAAA,mBAIUP,QAAQ,CAAC,KAAD,CAJlB;AAAA;AAAA,MAI3BQ,cAJ2B;AAAA,MAIXC,iBAJW;;AAAA,mBAMAT,QAAQ,CAACC,MAAM,CAACS,MAAP,EAAD,CANR;AAAA;AAAA,MAM3BC,SAN2B;AAAA,MAMhBC,YANgB;;AAAA,mBAOIZ,QAAQ,CAAC,KAAD,CAPZ;AAAA;AAAA,MAO3Ba,WAP2B;AAAA,MAOdC,cAPc;;AAAA,oBAQId,QAAQ,CAAC,IAAD,CARZ;AAAA;AAAA,MAQ3Be,WAR2B;AAAA,MAQdC,cARc;;AAUlC,MAAIC,YAAY,GAAGhB,MAAM,CAACiB,aAAP,EAAnB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,WAAOb,UAAU,CAACa,WAAX,EAAP;AACD,GAFD;;AAGA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,WAAOd,UAAU,CAACe,MAAX,CAAkB,GAAlB,CAAP;AACD,GAFD;;AAGA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,WAAOhB,UAAU,CAACe,MAAX,CAAkB,GAAlB,CAAP;AACD,GAFD;;AAGA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIjB,UAAU,GAAGA,UAAjB;AACA,QAAIkB,QAAQ,GAAGvB,MAAM,CAACK,UAAD,CAAN,CACZmB,OADY,CACJ,OADI,EAEZJ,MAFY,CAEL,GAFK,CAAf,CAF4B,CAIZ;;AAChB,WAAOG,QAAP;AACD,GAND;;AAOA,MAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,WAAOpB,UAAU,CAACe,MAAX,CAAkB,MAAlB,CAAP;AACD,GAFD;;AAGA,MAAMM,SAAS,GAAG,SAAZA,SAAY,CAACC,CAAD,EAAIF,KAAJ,EAAc;AAC9B,IAAA,KAAI,CAACG,QAAL,CAAc;AACZrB,MAAAA,cAAc,EAAE,CAACA,cADL;AAEZJ,MAAAA,iBAAiB,EAAE,CAACA;AAFR,KAAd;AAID,GALD;;AAMA,MAAM0B,QAAQ,GAAG,SAAXA,QAAW,CAACJ,KAAD,EAAW;AAC1B,QAAIK,OAAO,GAAGpB,SAAS,CAACqB,OAAV,CAAkBN,KAAlB,CAAd;AACA,QAAIpB,UAAU,GAAG2B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB5B,UAAlB,CAAjB;AACAA,IAAAA,UAAU,GAAGL,MAAM,CAACK,UAAD,CAAN,CAAmB6B,GAAnB,CAAuB,OAAvB,EAAgCJ,OAAhC,CAAb;;AACA,IAAA,KAAI,CAACF,QAAL,CAAc;AACZvB,MAAAA,UAAU,EAAEA,UADA;AAEZE,MAAAA,cAAc,EAAE,CAACA,cAFL;AAGZJ,MAAAA,iBAAiB,EAAE,CAACA;AAHR,KAAd;AAKD,GATD;;AAUA,MAAMgC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B,QAAI3B,MAAM,GAAG,EAAb;AACA2B,IAAAA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAACD,IAAD,EAAU;AACvB5B,MAAAA,MAAM,CAAC8B,IAAP,eACE;AACE,QAAA,GAAG,EAAEF,IADP;AAEE,QAAA,SAAS,EAAC,gBAFZ;AAGE,QAAA,OAAO,EAAE,iBAACV,CAAD,EAAO;AACdE,UAAAA,QAAQ,CAACQ,IAAD,CAAR;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAP,CAPF,CADF;AAWD,KAZD;AAaA,QAAIG,IAAI,GAAG,EAAX;AACA,QAAIC,KAAK,GAAG,EAAZ;AAEAhC,IAAAA,MAAM,CAACiC,OAAP,CAAe,UAACC,GAAD,EAAMC,CAAN,EAAY;AACzB,UAAIA,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeA,CAAC,IAAI,CAAxB,EAA2B;AACzBH,QAAAA,KAAK,CAACF,IAAN,CAAWI,GAAX;AACD,OAFD,MAEO;AACLH,QAAAA,IAAI,CAACD,IAAL,CAAUE,KAAV;AACAA,QAAAA,KAAK,GAAG,EAAR;AACAA,QAAAA,KAAK,CAACF,IAAN,CAAWI,GAAX;AACD;AACF,KARD;AASAH,IAAAA,IAAI,CAACD,IAAL,CAAUE,KAAV;AACA,QAAII,SAAS,GAAGL,IAAI,CAACF,GAAL,CAAS,UAACQ,CAAD,EAAIF,CAAJ,EAAU;AACjC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKE,CAAL,CAAP;AACD,KAFe,CAAhB;AAIA,wBACE;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,SAAR,CANF,CADF;AAUD,GA1CD;;AA4CA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,IAAA,KAAI,CAACnB,QAAL,CAAc;AACZhB,MAAAA,WAAW,EAAE,IADD;AAEZT,MAAAA,iBAAiB,EAAE,CAACA;AAFR,KAAd;AAID,GALD;;AAOA,MAAM6C,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAIC,IAAI,GAAG,EAAX;;AACA,QAAI1C,cAAc,IAAI,IAAtB,EAA4B;AAC1B0C,MAAAA,IAAI,GAAG,MAAP;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,GAAG,OAAP;AACD;;AACD,IAAA,KAAI,CAACrB,QAAL,CAAc;AACZvB,MAAAA,UAAU,EAAEA,UAAU,CAAC6C,QAAX,CAAoB,CAApB,EAAuBD,IAAvB;AADA,KAAd;AAGD,GAVD;;AAWA,MAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAIF,IAAI,GAAG,EAAX;;AACA,QAAI1C,cAAc,IAAI,IAAtB,EAA4B;AAC1B0C,MAAAA,IAAI,GAAG,MAAP;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,GAAG,OAAP;AACD;;AACD,IAAA,KAAI,CAACrB,QAAL,CAAc;AACZvB,MAAAA,UAAU,EAAEA,UAAU,CAAC+C,GAAX,CAAe,CAAf,EAAkBH,IAAlB;AADA,KAAd;AAGD,GAVD;;AAWA,MAAMI,OAAO,GAAG,SAAVA,OAAU,CAAClC,IAAD,EAAU;AACxB;AACA,QAAId,UAAU,GAAG2B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB5B,UAAlB,CAAjB;AACAA,IAAAA,UAAU,GAAGL,MAAM,CAACK,UAAD,CAAN,CAAmB6B,GAAnB,CAAuB,MAAvB,EAA+Bf,IAA/B,CAAb;;AACA,IAAA,KAAI,CAACS,QAAL;AACEvB,MAAAA,UAAU,EAAEA,UADd;AAEEE,MAAAA,cAAc,EAAE,CAACA,cAFnB;AAGEK,MAAAA,WAAW,EAAE,CAACA;AAHhB,yBAIkB,CAACL,cAJnB;AAMD,GAVD;;AAWA,MAAM+C,YAAY,GAAG,SAAfA,YAAe,CAAC3B,CAAD,EAAO;AAC1B,IAAA,KAAI,CAAC0B,OAAL,CAAa1B,CAAC,CAAC4B,MAAF,CAASC,KAAtB;AACD,GAFD;;AAGA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAYC,QAAZ,EAAyB;AACxC,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,WAAW,GAAG7D,MAAM,CAAC0D,SAAD,CAAxB;AACA,QAAIC,QAAQ,GAAG3D,MAAM,CAAC2D,QAAD,CAArB;;AACA,WAAOE,WAAW,IAAIF,QAAtB,EAAgC;AAC9BC,MAAAA,SAAS,CAACrB,IAAV,CAAevC,MAAM,CAAC6D,WAAD,CAAN,CAAoBzC,MAApB,CAA2B,MAA3B,CAAf;AACAyC,MAAAA,WAAW,GAAG7D,MAAM,CAAC6D,WAAD,CAAN,CAAoBT,GAApB,CAAwB,CAAxB,EAA2B,MAA3B,CAAd;AACD;;AACD,WAAOQ,SAAP;AACD,GATD;;AAUA,MAAME,SAAS,GAAG,SAAZA,SAAY,CAAC1B,KAAD,EAAW;AAC3B,QAAI3B,MAAM,GAAG,EAAb;AACA,QAAIsD,OAAO,GAAG/D,MAAM,GACjBkC,GADW,CACP,MADO,EACCE,KADD,EAEXgB,GAFW,CAEP,MAFO,EAEC,EAFD,EAGXhC,MAHW,CAGJ,GAHI,CAAd;AAKA,QAAI4C,OAAO,GAAGP,QAAQ,CAACrB,KAAD,EAAQ2B,OAAR,CAAtB;AAEAC,IAAAA,OAAO,CAAC1B,GAAR,CAAY,UAACD,IAAD,EAAU;AACpB5B,MAAAA,MAAM,CAAC8B,IAAP,eACE;AACE,QAAA,GAAG,EAAEF,IADP;AAEE,QAAA,SAAS,EAAC,gBAFZ;AAGE,QAAA,OAAO,EAAE,iBAACV,CAAD,EAAO;AACd,UAAA,KAAI,CAAC0B,OAAL,CAAahB,IAAb;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAP,CAPF,CADF;AAWD,KAZD;AAaA,QAAIG,IAAI,GAAG,EAAX;AACA,QAAIC,KAAK,GAAG,EAAZ;AAEAhC,IAAAA,MAAM,CAACiC,OAAP,CAAe,UAACC,GAAD,EAAMC,CAAN,EAAY;AACzB,UAAIA,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeA,CAAC,IAAI,CAAxB,EAA2B;AACzBH,QAAAA,KAAK,CAACF,IAAN,CAAWI,GAAX;AACD,OAFD,MAEO;AACLH,QAAAA,IAAI,CAACD,IAAL,CAAUE,KAAV;AACAA,QAAAA,KAAK,GAAG,EAAR;AACAA,QAAAA,KAAK,CAACF,IAAN,CAAWI,GAAX;AACD;AACF,KARD;AASAH,IAAAA,IAAI,CAACD,IAAL,CAAUE,KAAV;AACA,QAAIwB,QAAQ,GAAGzB,IAAI,CAACF,GAAL,CAAS,UAACQ,CAAD,EAAIF,CAAJ,EAAU;AAChC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKE,CAAL,CAAP;AACD,KAFc,CAAf;AAIA,wBACE;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQmB,QAAR,CANF,CADF;AAUD,GAjDD;;AAkDA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACvC,CAAD,EAAImB,CAAJ,EAAU;AAC3B,IAAA,KAAI,CAAClB,QAAL,CACE;AACEd,MAAAA,WAAW,EAAEgC;AADf,KADF,EAIE,YAAM;AACJqB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BtD,WAA9B;AACD,KANH;AAQD,GATD;;AAUA,MAAIuD,gBAAgB,GAAG,KAAKrD,YAAL,CAAkBsB,GAAlB,CAAsB,UAACgC,GAAD,EAAS;AACpD,wBAAO;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CAAP;AACD,GAFsB,CAAvB;AAGA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKtB,eAAL,EAApB,EAA4CsB,CAAC,EAA7C,EAAiD;AAC/C2B,IAAAA,MAAM,CAAChC,IAAP,eAAY;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC,EAApC,CAAZ;AACD;;AACD,MAAIiC,SAAS,GAAG,EAAhB;;AAnNkC,6BAoNzB1B,CApNyB;AAqNhC,QAAIzB,UAAU,GAAGyB,CAAC,IAAI,KAAI,CAACzB,UAAL,EAAL,GAAyB,OAAzB,GAAmC,EAApD,CArNgC,CAsNhC;;AACAmD,IAAAA,SAAS,CAACjC,IAAV,eACE;AAAI,MAAA,GAAG,EAAEO,CAAT;AAAY,MAAA,SAAS,yBAAkBzB,UAAlB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,iBAACM,CAAD,EAAO;AACd,QAAA,KAAI,CAACuC,UAAL,CAAgBvC,CAAhB,EAAmBmB,CAAnB;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,CALH,CADF,CADF;AAvNgC;;AAoNlC,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAK0B,SAAL,EAArB,EAAuC1B,CAAC,EAAxC,EAA4C;AAAA,UAAnCA,CAAmC;AAc3C;;AACD,MAAI2B,UAAU,aAAOF,MAAP,EAAkBC,SAAlB,CAAd;AACA,MAAIhC,IAAI,GAAG,EAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;AAEAgC,EAAAA,UAAU,CAAC/B,OAAX,CAAmB,UAACC,GAAD,EAAMC,CAAN,EAAY;AAC7B,QAAIA,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACfH,MAAAA,KAAK,CAACF,IAAN,CAAWI,GAAX;AACD,KAFD,MAEO;AACLH,MAAAA,IAAI,CAACD,IAAL,CAAUE,KAAV;AACAA,MAAAA,KAAK,GAAG,EAAR;AACAA,MAAAA,KAAK,CAACF,IAAN,CAAWI,GAAX;AACD;;AACD,QAAIC,CAAC,KAAK6B,UAAU,CAACC,MAAX,GAAoB,CAA9B,EAAiC;AAC/B;AACAlC,MAAAA,IAAI,CAACD,IAAL,CAAUE,KAAV;AACD;AACF,GAZD;AAcA,MAAIkC,WAAW,GAAGnC,IAAI,CAACF,GAAL,CAAS,UAACQ,CAAD,EAAIF,CAAJ,EAAU;AACnC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKE,CAAL,CAAP;AACD,GAFiB,CAAlB;AAIA,sBAAO,yCAAP;AACD","sourcesContent":["import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { range } from \"moment-range\";\nimport \"../components/calendar\";\n\nexport default function MainIndex() {\n  const [showCalendarTable, setShowCalenderTable] = useState(true);\n  const [dateObject, setDateObject] = useState(moment());\n\n  const [showMonthTable, setShowMonthTable] = useState(false);\n\n  const [allmonths, setAllmonths] = useState(moment.months());\n  const [showYearNav, setShowYearNav] = useState(false);\n  const [selectedDay, setSelectedDay] = useState(null);\n\n  let weekdayshort = moment.weekdaysShort();\n\n  const daysInMonth = () => {\n    return dateObject.daysInMonth();\n  };\n  const year = () => {\n    return dateObject.format(\"Y\");\n  };\n  const currentDay = () => {\n    return dateObject.format(\"D\");\n  };\n  const firstDayOfMonth = () => {\n    let dateObject = dateObject;\n    let firstDay = moment(dateObject)\n      .startOf(\"month\")\n      .format(\"d\"); // Day of week 0...1..5...6\n    return firstDay;\n  };\n  const month = () => {\n    return dateObject.format(\"MMMM\");\n  };\n  const showMonth = (e, month) => {\n    this.setState({\n      showMonthTable: !showMonthTable,\n      showCalendarTable: !showCalendarTable,\n    });\n  };\n  const setMonth = (month) => {\n    let monthNo = allmonths.indexOf(month);\n    let dateObject = Object.assign({}, dateObject);\n    dateObject = moment(dateObject).set(\"month\", monthNo);\n    this.setState({\n      dateObject: dateObject,\n      showMonthTable: !showMonthTable,\n      showCalendarTable: !showCalendarTable,\n    });\n  };\n  const MonthList = (props) => {\n    let months = [];\n    props.data.map((data) => {\n      months.push(\n        <td\n          key={data}\n          className=\"calendar-month\"\n          onClick={(e) => {\n            setMonth(data);\n          }}\n        >\n          <span>{data}</span>\n        </td>\n      );\n    });\n    let rows = [];\n    let cells = [];\n\n    months.forEach((row, i) => {\n      if (i % 3 !== 0 || i == 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n    });\n    rows.push(cells);\n    let monthlist = rows.map((d, i) => {\n      return <tr>{d}</tr>;\n    });\n\n    return (\n      <table className=\"calendar-month\">\n        <thead>\n          <tr>\n            <th colSpan=\"4\">Select a Month</th>\n          </tr>\n        </thead>\n        <tbody>{monthlist}</tbody>\n      </table>\n    );\n  };\n\n  const showYearEditor = () => {\n    this.setState({\n      showYearNav: true,\n      showCalendarTable: !showCalendarTable,\n    });\n  };\n\n  const onPrev = () => {\n    let curr = \"\";\n    if (showMonthTable == true) {\n      curr = \"year\";\n    } else {\n      curr = \"month\";\n    }\n    this.setState({\n      dateObject: dateObject.subtract(1, curr),\n    });\n  };\n  const onNext = () => {\n    let curr = \"\";\n    if (showMonthTable == true) {\n      curr = \"year\";\n    } else {\n      curr = \"month\";\n    }\n    this.setState({\n      dateObject: dateObject.add(1, curr),\n    });\n  };\n  const setYear = (year) => {\n    // alert(year)\n    let dateObject = Object.assign({}, dateObject);\n    dateObject = moment(dateObject).set(\"year\", year);\n    this.setState({\n      dateObject: dateObject,\n      showMonthTable: !showMonthTable,\n      showYearNav: !showYearNav,\n      showMonthTable: !showMonthTable,\n    });\n  };\n  const onYearChange = (e) => {\n    this.setYear(e.target.value);\n  };\n  const getDates = (startDate, stopDate) => {\n    var dateArray = [];\n    var currentDate = moment(startDate);\n    var stopDate = moment(stopDate);\n    while (currentDate <= stopDate) {\n      dateArray.push(moment(currentDate).format(\"YYYY\"));\n      currentDate = moment(currentDate).add(1, \"year\");\n    }\n    return dateArray;\n  };\n  const YearTable = (props) => {\n    let months = [];\n    let nextten = moment()\n      .set(\"year\", props)\n      .add(\"year\", 12)\n      .format(\"Y\");\n\n    let tenyear = getDates(props, nextten);\n\n    tenyear.map((data) => {\n      months.push(\n        <td\n          key={data}\n          className=\"calendar-month\"\n          onClick={(e) => {\n            this.setYear(data);\n          }}\n        >\n          <span>{data}</span>\n        </td>\n      );\n    });\n    let rows = [];\n    let cells = [];\n\n    months.forEach((row, i) => {\n      if (i % 3 !== 0 || i == 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n    });\n    rows.push(cells);\n    let yearlist = rows.map((d, i) => {\n      return <tr>{d}</tr>;\n    });\n\n    return (\n      <table className=\"calendar-month\">\n        <thead>\n          <tr>\n            <th colSpan=\"4\">Select a Yeah</th>\n          </tr>\n        </thead>\n        <tbody>{yearlist}</tbody>\n      </table>\n    );\n  };\n  const onDayClick = (e, d) => {\n    this.setState(\n      {\n        selectedDay: d,\n      },\n      () => {\n        console.log(\"SELECTED DAY: \", selectedDay);\n      }\n    );\n  };\n  let weekdayshortname = this.weekdayshort.map((day) => {\n    return <th key={day}>{day}</th>;\n  });\n  let blanks = [];\n  for (let i = 0; i < this.firstDayOfMonth(); i++) {\n    blanks.push(<td className=\"calendar-day empty\">{\"\"}</td>);\n  }\n  let daysMonth = [];\n  for (let d = 1; d <= this.daysMonth(); d++) {\n    let currentDay = d == this.currentDay() ? \"today\" : \"\";\n    // let selectedClass = (d == selectedDay ? \" selected-day \" : \"\")\n    daysMonth.push(\n      <td key={d} className={`calendar-day ${currentDay}`}>\n        <span\n          onClick={(e) => {\n            this.onDayClick(e, d);\n          }}\n        >\n          {d}\n        </span>\n      </td>\n    );\n  }\n  var totalSlots = [...blanks, ...daysMonth];\n  let rows = [];\n  let cells = [];\n\n  totalSlots.forEach((row, i) => {\n    if (i % 7 !== 0) {\n      cells.push(row);\n    } else {\n      rows.push(cells);\n      cells = [];\n      cells.push(row);\n    }\n    if (i === totalSlots.length - 1) {\n      // let insertRow = cells.slice();\n      rows.push(cells);\n    }\n  });\n\n  let daysinmonth = rows.map((d, i) => {\n    return <tr>{d}</tr>;\n  });\n\n  return <></>;\n}\n"]},"metadata":{},"sourceType":"module"}